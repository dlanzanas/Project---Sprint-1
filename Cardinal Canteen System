import sqlite3
from tkinter import Tk, Canvas, Entry, Button, PhotoImage, messagebox
from pathlib import Path

#-------------------------------Utility Functions-------------------------------#

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"C:\Users\Rupert Jay Laureano\Documents\build\assets\frame0")

def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

def create_hover_button(x, y, width, height, normal_image_path, hover_image_path, command):
    normal_image = PhotoImage(file=relative_to_assets(normal_image_path))
    hover_image = PhotoImage(file=relative_to_assets(hover_image_path))

    button = Button(
        image=normal_image,
        borderwidth=0,
        highlightthickness=0,
        command=command,
        relief="flat"
    )
    button.image = normal_image
    button.place(x=x, y=y, width=width, height=height)

    def on_hover(event):
        button.config(image=hover_image)

    def on_leave(event):
        button.config(image=normal_image)

    button.bind("<Enter>", on_hover)
    button.bind("<Leave>", on_leave)

#-------------------------------Database Setup-------------------------------#
def create_database():
    conn = sqlite3.connect('user_database.db')
    c = conn.cursor()
    c.execute('''CREATE TABLE IF NOT EXISTS users
                 (fullname TEXT, username TEXT, password TEXT)''')
    conn.commit()
    conn.close()

#-------------------------------Registration Interface-------------------------------#
def register_user():
    fullname = entry_1.get()
    username = entry_2.get()
    password = entry_3.get()

    if not fullname or not username or not password:
        messagebox.showerror("Error", "All fields are required!")
        return

    conn = sqlite3.connect('user_database.db')
    c = conn.cursor()
    c.execute("INSERT INTO users (fullname, username, password) VALUES (?, ?, ?)", (fullname, username, password))
    conn.commit()
    conn.close()

    messagebox.showinfo("Success", "Registration successful!")
    window.destroy()  # Close the registration window
    login_interface()  # Open the login window

def registration_interface():
    global window, entry_1, entry_2, entry_3
    window = Tk()

    window.geometry("1000x580")
    window.configure(bg="#FFFFFF")

    canvas = Canvas(
        window,
        bg="#FFFFFF",
        height=580,
        width=1000,
        bd=0,
        highlightthickness=0,
        relief="ridge"
    )

    canvas.place(x=0, y=0)
    canvas.create_text(
        36.0,
        191.0,
        anchor="nw",
        text="- Users must register using their respective credentials\n\n- Students 10-digit student number\n\n- Athletes: 11-digit number\n\n- Employees and Staff: 9-digit number\n\n- Admin: Must log in using ‘ADMIN’ as the UserId",
        fill="#000000",
        font=("InknutAntiqua Regular", 14 * -1)
    )

    canvas.create_rectangle(0.0, 0.0, 1000.0, 129.0, fill="#AB2328", outline="")
    canvas.create_rectangle(0.0, 82.0, 1000.0, 99.0, fill="#E6B528", outline="")
    canvas.create_text(162.0, 10.0, anchor="nw", text="Cardinal Canteen", fill="#E6B528", font=("InknutAntiqua Regular", 36 * -1))
    canvas.create_rectangle(23.0, 151.0, 983.0, 181.0, fill="#FAEECA", outline="")
    canvas.create_text(32.0, 149.0, anchor="nw", text="REGISTRATION FORM", fill="#000000", font=("InknutAntiqua Bold", 18 * -1))

    image_image_1 = PhotoImage(file=relative_to_assets("image_1.png"))
    canvas.create_image(111.0, 53.0, image=image_image_1)

    canvas.create_text(500.0, 196.0, anchor="nw", text="Full Name:", fill="#271717", font=("InknutAntiqua Regular", 12 * -1))
    canvas.create_text(500.0, 270.0, anchor="nw", text="User Id:", fill="#271717", font=("InknutAntiqua Regular", 12 * -1))
    canvas.create_text(500.0, 346.0, anchor="nw", text="Password:", fill="#271717", font=("InknutAntiqua Regular", 12 * -1))

    entry_1 = Entry(bd=0, bg="#D9D9D9", fg="#000716", highlightthickness=0)
    entry_1.place(x=500.0, y=221.0, width=315.0, height=34.0)

    entry_2 = Entry(bd=0, bg="#D9D9D9", fg="#000716", highlightthickness=0)
    entry_2.place(x=500.0, y=295.0, width=315.0, height=34.0)

    entry_3 = Entry(bd=0, bg="#D9D9D9", fg="#000716", highlightthickness=0, show="*")
    entry_3.place(x=500.0, y=371.0, width=315.0, height=34.0)

    button_1 = Button(
        text="Register",
        borderwidth=0,
        highlightthickness=0,
        command=register_user,
        relief="flat"
    )
    button_1.place(x=500.0, y=447.0, width=315.0, height=36.0)

    button_2 = Button(
        text="Already Registered? Login",
        borderwidth=0,
        highlightthickness=0,
        command=lambda: [window.destroy(), login_interface()],
        relief="flat"
    )
    button_2.place(x=500.0, y=489.0, width=315.0, height=36.0)

    window.resizable(False, False)
    window.mainloop()

#-------------------------------Login Interface-------------------------------#
def login():
    username = entry_4.get()
    password = entry_5.get()

    conn = sqlite3.connect('user_database.db')
    c = conn.cursor()
    c.execute("SELECT * FROM users WHERE username=? AND password=?", (username, password))
    user = c.fetchone()
    conn.close()

    if user:
        messagebox.showinfo("Login Successful", f"Welcome, {user[0]}!")
        open_customer_interface()
    else:
        messagebox.showerror("Login Failed", "Invalid username or password.")

def login_interface():
    global window, entry_4, entry_5
    window = Tk()

    window.geometry("1000x580")
    window.configure(bg="#FFFFFF")

    canvas = Canvas(
        window,
        bg="#FFFFFF",
        height=580,
        width=1000,
        bd=0,
        highlightthickness=0,
        relief="ridge"
    )

    canvas.place(x=0, y=0)
    canvas.create_rectangle(0.0, 0.0, 1000.0, 129.0, fill="#AB2328", outline="")
    canvas.create_rectangle(0.0, 82.0, 1000.0, 99.0, fill="#E6B528", outline="")
    canvas.create_text(162.0, 10.0, anchor="nw", text="Cardinal Canteen", fill="#E6B528", font=("Avenir Next", 36 * -1))

    image_image_1 = PhotoImage(file=relative_to_assets("image_1.png"))
    canvas.create_image(111.0, 53.0, image=image_image_1)

    entry_4 = Entry(bd=0, bg="#D9D9D9", fg="#000716", highlightthickness=0)
    entry_4.place(x=342.0, y=294.0, width=315.0, height=34.0)

    canvas.create_text(343.0, 269.0, anchor="nw", text="User Id:", fill="#271717", font=("Avenir Next", 12 * -1))

    entry_5 = Entry(bd=0, bg="#D9D9D9", fg="#000716", highlightthickness=0, show="*")
    entry_5.place(x=342.0, y=366.0, width=315.0, height=34.0)

    canvas.create_text(343.0, 341.0, anchor="nw", text="Password:", fill="#271717", font=("Avenir Next", 12 * -1))

    # Button 3 (Login) with hover effect
    button_image_3 = PhotoImage(file=relative_to_assets("button_3.png"))
    button_3 = Button(
        image=button_image_3,
        borderwidth=0,
        highlightthickness=0,
        command=login,
        relief="flat"
    )
    button_3.place(x=393.0, y=431.0, width=213.0, height=39.0)

    window.resizable(False, False)
    window.mainloop()

#-------------------------------Customer Interface-------------------------------#
def open_customer_interface():
    window.destroy()
    customer_interface()

def customer_interface():
    global window
    window = Tk()

    window.geometry("1000x580")
    window.configure(bg="#FFFFFF")

    canvas = Canvas(
        window,
        bg="#FFFFFF",
        height=580,
        width=1000,
        bd=0,
        highlightthickness=0,
        relief="ridge"
    )

    canvas.place(x=0, y=0)
    canvas.create_rectangle(0.0, 0.0, 1000.0, 129.0, fill="#AB2328", outline="")
    canvas.create_rectangle(0.0, 82.0, 1000.0, 99.0, fill="#E6B528", outline="")
    canvas.create_text(162.0, 10.0, anchor="nw", text="Cardinal Canteen", fill="#E6B528", font=("InknutAntiqua Regular", 36 * -1))

    image_image_1 = PhotoImage(file=relative_to_assets("image_1.png"))
    canvas.create_image(111.0, 53.0, image=image_image_1)

    # Buttons for different canteen options
    create_hover_button(81.0, 203.0, 361.0, 65.0, "button_4.png", "button_hover_4.png", lambda: print("Vmes Canteen clicked"))
    create_hover_button(81.0, 318.0, 361.0, 65.0, "button_5.png", "button_hover_5.png", lambda: print("Angel's Pizza clicked"))
    create_hover_button(81.0, 454.0, 361.0, 65.0, "button_6.png", "button_hover_6.png", lambda: print("Chef Babs clicked"))
    create_hover_button(555.0, 203.0, 361.0, 65.0, "button_7.png", "button_hover_7.png", lambda: print("Famous Belgian Waffles clicked"))
    create_hover_button(555.0, 318.0, 361.0, 65.0, "button_8.png", "button_hover_8.png", lambda: print("Vardas Burger clicked"))
    create_hover_button(555.0, 454.0, 361.0, 65.0, "button_9.png", "button_hover_9.png", lambda: print("de Original Jamaican clicked"))

    window.resizable(False, False)
    window.mainloop()


# Start the application
create_database()
registration_interface()
